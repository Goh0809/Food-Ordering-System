/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form.DeliveryRunner;

import java.util.List;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import Class.RunnerUpdStatus;
import Class.VendorOrder;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;

/**
 *
 * @author User
 */
public class Runner_UpdateTask extends javax.swing.JFrame {

    private RunnerUpdStatus runnerUptStatus;
    private String username;
    private String runnerID;
    VendorOrder vo = new VendorOrder();

    /**
     * Creates new form Runner_UpdateTask
     */
    public Runner_UpdateTask(String username) {
        initComponents();
        runnerUptStatus = new RunnerUpdStatus();
        runnerID = (runnerUptStatus.getRunnerUserIdByUsername(username));
        displayTaskStatus(runnerUptStatus.getRunnerUserIdByUsername(username));
        JTableHeader tableHeader1 = table_taskstatus.getTableHeader();
        Font headerFont1 = new Font("Georgia", Font.BOLD, 14);
        tableHeader1.setFont(headerFont1);
    }

    private void displayTaskStatus(String runnerID) {

        List<List<String>> acceptedOrderDetailsList = runnerUptStatus.getAcceptedOrderDetails(runnerID);

        DefaultTableModel model = (DefaultTableModel) table_taskstatus.getModel();
        model.setRowCount(0); 

        for (List<String> acceptedOrderDetails : acceptedOrderDetailsList) {
            if (acceptedOrderDetails != null && acceptedOrderDetails.size() >= 8) {

                String OrderID = acceptedOrderDetails.get(0);
                String OrderPlacementTime = acceptedOrderDetails.get(1);
                String OrderItemID = acceptedOrderDetails.get(2);
                String OrderAmount = acceptedOrderDetails.get(3);
                String OrderStatus = acceptedOrderDetails.get(4);
                String CustomerUserID = acceptedOrderDetails.get(5);
                String VendorUserID = acceptedOrderDetails.get(6);


                model.addRow(acceptedOrderDetails.toArray());
            }
        }
    }

    private void refreshTable(String runnerID) {
        DefaultTableModel model = (DefaultTableModel) table_taskstatus.getModel();
        model.setRowCount(0); 

        List<List<String>> acceptedOrderDetailsList = runnerUptStatus.getAcceptedOrderDetails(runnerID);

        for (List<String> acceptedOrderDetails : acceptedOrderDetailsList) {
            if (acceptedOrderDetails != null && acceptedOrderDetails.size() >= 8) {
                String OrderID = acceptedOrderDetails.get(0);
                String OrderPlacementTime = acceptedOrderDetails.get(1);
                String OrderItemID = acceptedOrderDetails.get(2);
                String OrderAmount = acceptedOrderDetails.get(3);
                String OrderStatus = acceptedOrderDetails.get(4);
                String CustomerUserID = acceptedOrderDetails.get(5);
                String VendorUserID = acceptedOrderDetails.get(6);

                model.addRow(acceptedOrderDetails.toArray());
            }
        }

        model.fireTableDataChanged(); // Notify the table that the data has changed
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_taskstatus = new javax.swing.JTable();
        btn_pickup = new javax.swing.JButton();
        btn_delivered = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(940, 780));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 700));

        table_taskstatus.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        table_taskstatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "OrderPlacementTime", "OrderItemID", "OrderAmount", "OrderStatus", "CustomerUserID", "VendorUserID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_taskstatus.setRowHeight(30);
        table_taskstatus.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_taskstatus);
        if (table_taskstatus.getColumnModel().getColumnCount() > 0) {
            table_taskstatus.getColumnModel().getColumn(0).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(0).setPreferredWidth(10);
            table_taskstatus.getColumnModel().getColumn(1).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(1).setPreferredWidth(95);
            table_taskstatus.getColumnModel().getColumn(2).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(2).setPreferredWidth(40);
            table_taskstatus.getColumnModel().getColumn(3).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(3).setPreferredWidth(40);
            table_taskstatus.getColumnModel().getColumn(4).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(4).setPreferredWidth(40);
            table_taskstatus.getColumnModel().getColumn(5).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(5).setPreferredWidth(45);
            table_taskstatus.getColumnModel().getColumn(6).setResizable(false);
            table_taskstatus.getColumnModel().getColumn(6).setPreferredWidth(45);
        }

        btn_pickup.setBackground(new java.awt.Color(255, 204, 102));
        btn_pickup.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_pickup.setText("PickUp");
        btn_pickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pickupActionPerformed(evt);
            }
        });

        btn_delivered.setBackground(new java.awt.Color(0, 204, 153));
        btn_delivered.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_delivered.setText("Delivered");
        btn_delivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deliveredActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 204));
        jLabel1.setText("Update Task Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(287, 287, 287))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_delivered, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_pickup, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(258, 258, 258))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_pickup, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btn_delivered, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pickupActionPerformed
        int selectedRow = table_taskstatus.getSelectedRow();
        if (selectedRow != -1) {
            String orderStatus = (String) table_taskstatus.getValueAt(selectedRow, 4);
            if (orderStatus.equals("Accepted")) {
                String orderID = (String) table_taskstatus.getValueAt(selectedRow, 0);
                int vendorID = Integer.parseInt(runnerUptStatus.getVendorID(orderID));
                int customerID= Integer.parseInt(vo.getCustomerUserID(orderID));

                runnerUptStatus.updateOrderFile(orderID, "Pick-Up");
                runnerUptStatus.generatePickUpNotification(vendorID, orderID);
                runnerUptStatus.generatePickUpNotification(customerID, orderID);
                JOptionPane.showMessageDialog(this, "Order Picked Up", "Order Picked Up", JOptionPane.INFORMATION_MESSAGE);
            }

        }
        refreshTable(runnerID);
    }//GEN-LAST:event_btn_pickupActionPerformed

    private void btn_deliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deliveredActionPerformed
        int selectedRow = table_taskstatus.getSelectedRow();
        if (selectedRow != -1) {
            String orderStatus = (String) table_taskstatus.getValueAt(selectedRow, 4);
            if (orderStatus.equals("Pick-Up")) {
                String orderID = (String) table_taskstatus.getValueAt(selectedRow, 0); 
                int vendorID = Integer.parseInt(runnerUptStatus.getVendorID(orderID));
                int customerID= Integer.parseInt(vo.getCustomerUserID(orderID));

                runnerUptStatus.updateOrderFile(orderID, "Delivered");

                runnerUptStatus.createCreditTransaction(runnerID, orderID);

                runnerUptStatus.updateRunnerandVendorCredit(Integer.parseInt(runnerID), vendorID, true);
                
                runnerUptStatus.generateDeliveredNotification(vendorID, orderID);
                runnerUptStatus.generateDeliveredNotification(customerID, orderID);
                
                runnerUptStatus.generateDebitFeeNotification(Integer.parseInt(runnerID), orderID);
                JOptionPane.showMessageDialog(this, "Order Delivered", "Order Delivered", JOptionPane.INFORMATION_MESSAGE);
            }

        }
        refreshTable(runnerID);
    }//GEN-LAST:event_btn_deliveredActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Runner_UpdateTask.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Runner_UpdateTask.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Runner_UpdateTask.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Runner_UpdateTask.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Runner_UpdateTask("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delivered;
    private javax.swing.JButton btn_pickup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_taskstatus;
    // End of variables declaration//GEN-END:variables
}
